import snowflake.connector
import pandas as pd
import plotly.express as px
import numpy as np

def run_data_quality_checks(table_list, column_checks, conn, threshold_pct):
    data = []
    for table_name in table_list:
        for col_name, checks in column_checks[table_name].items():
            for check_type, check_script in checks.items():
                query = f"SELECT COUNT(*) FROM {table_name} WHERE {col_name} IS NOT NULL AND {check_script};"
                cursor = conn.cursor()
                cursor.execute(query)
                result = cursor.fetchone()[0]
                if result > 0:
                    print(f"Data quality issue detected in table '{table_name}', column '{col_name}', check '{check_type}': {result} rows failed the check.")
                    data.append([table_name, col_name, check_type, result])
                else:
                    print(f"No data quality issues detected in table '{table_name}', column '{col_name}', check '{check_type}'.")
    
    if len(data) > 0:
        # Create a Pandas DataFrame to hold the data quality issues
        df = pd.DataFrame(data, columns=['Table Name', 'Column Name', 'Check Type', 'Issue Count'])

        # Create a pie chart to display the data quality issues by table name
        fig = px.pie(df, names='Table Name', values='Issue Count', title='Data Quality Issues by Table Name')
        fig.show()

        # Create a heatmap to display the data quality issues by column name and check type
        df_pivot = pd.pivot_table(df, index=['Column Name'], columns=['Check Type'], values=['Issue Count'], aggfunc=np.sum, fill_value=0)
        fig = px.imshow(df_pivot, title='Data Quality Issues by Column Name and Check Type')
        fig.show()

        # Create a table to display the data quality issues, sorted by issue count in descending order
        df_sorted = df.sort_values(by=['Issue Count'], ascending=False)
        df_sorted['Issue Percentage'] = round(df_sorted['Issue Count'] / df_sorted.groupby(['Table Name'])['Issue Count'].transform('sum') * 100, 2)
        df_sorted = df_sorted[df_sorted['Issue Percentage'] >= threshold_pct]
        print('Data quality issues summary:')
        print(df_sorted.to_string(index=False))
    else:
        print('No data quality issues detected.')

# Define the Snowflake credentials and connect to Snowflake
conn = snowflake.connector.connect(
    user='<your_user>',
    password='<your_password>',
    account='<your_account>',
    database='<your_database>',
    schema='<your_schema>',
    warehouse='<your_warehouse>'
)

# Define the tables and columns to check, along with the data quality checks to perform for each column
table_list = ['table1', 'table2', 'table3']
column_checks = {
    'table1': {
        'col1': {
            'Null Check': 'IS NULL',
            'Pattern Check': "NOT REGEXP_LIKE(col1, '[A-Za-z0-9_]+')"
        },
        'col2': {
            'Null Check': 'IS NULL'
        }
    },
    'table2': {
        'col3': {
            'Null Check': 'IS NULL',
            'Range Check': 'col3 BETWEEN 0 AND 100'
        },
        'col4': {
            'Null Check': 'IS NULL',
            'Type Check': 'TRY_TO_TIMESTAMP(col4) IS NULL'
        }
    },
    'table3': {
        'col5': {
            'Null Check': 'IS


#Run the data quality checks and get the results as a Pandas DataFrame
df = run_data_quality_checks(table_list, column_checks, conn)

Close the Snowflake connection
conn.close()

if not df.empty:
# Create a pie chart to display the data quality issues by table name
fig = px.pie(df, names='Table Name', values='Issue Count', title='Data Quality Issues by Table Name')
fig.show()

# Create a bar chart to display the data quality issues by check type
fig2 = px.bar(df, x='Check Type', y='Issue Count', color='Table Name', title='Data Quality Issues by Check Type')
fig2.show()

# Create a table to display the data quality issues by table name and column name
fig3 = px.table(df, columns={'Table Name', 'Column Name', 'Check Type', 'Issue Count'}, title='Data Quality Issues by Table Name and Column Name')
fig3.show()


else:
print('No data quality issues detected.')
